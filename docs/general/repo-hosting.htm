<!DOCTYPE html>
<html lang="en-US"><head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="template-info" file-name="empty.htm" version="2022-02-09" editor="USP" />
<meta name="author" content="USP" />
<meta name="creation-date" content="2022-03-21" />
<meta name="editor" content="USP" />
<meta name="change-date" content="2022-03-24" />
<meta name="version" content="1" />
<meta name="categories" content="" />
<meta name="tags" content="" />
<meta name="description" content="At the time of writing, there are several code hosters available to  individuals and organisations. Github, Gitlab and Sourceforge are some of them." />

<link rel="stylesheet" href="/inc/page.css" />
 
<title>General Development - Code Repository Hosting</title>

</head><body><header id="page-header"></header><div id="main-toolbar"></div><main id="page-content" cbc-default="expanded">

<h1>Code Repository Hosting</h1>

<p id="page-abstract"></p>

<h2 cbc>Sourceforge</h2><div>

<p>Sourceforge has been around as long as I can think, and provides the following features:</p>

<ul>
<li>Git, SVN, and Mercurial repositories</li>
<li>Multiple repos for each project</li>
<li>Project website</li>
<li>User website</li>
<li>Up to 10 MariaDBs per project</li>
<li>PHPAdmin for the database configuration</li>
<li>SSH shell provides access to project webspace, files and MySQL client.</li>
<li>et cetera</li>
</ul>

<p>The databases are not accessible from outside the Sourceforge domain. </p>

<p>Project names on Sourceforge are not scoped to a specific Sourceforge account, the project name must be globally unique. A project comprises of several "tools", such as wiki, tickets, discussion, mailing lists, blog, database, virtual http hosts, and one or more code repositories (Git, Mercurial, Subversion). By default, a project has an associated website, published under <tt>https://project-name.sourceforge.io</tt>.</p>

<p>Prerequisites on the local machine:</p>

<ul>
<li>SSH client</li>
<li>Git client</li>
</ul>

<p>The installation of prerequisites is described elsewhere.</p>

<p>To create a project on Sourceforge, follow these instructions:</p>

<ol class="collapsible instructions">
<li>Create an account on Sourceforge
	<ol>
	<li>Go to <a href="https://sourceforge.net/user/registration?return_to=https://sourceforge.net/">sourceforge.net/user/registration</a>, fill out the fields and click on "Register".</li>
	<li>Open your email client and open the Sourceforge sign-up verification mail.</li>
	<li>Click on the account activation button.</li>
	</ol></li>
<li>Open a console window and create an SSH key pair:
	<pre>
	cd /d d:\sourceforge\user-name
	mkdir ssh
	cd ssh
	ssh-keygen -t ed25519 -C user-name@shell.sf.net
	</pre>
	When aked for a keyfile name, press return to accept the default. When asked for a passphrase, press return to create an unlocked keyfile (otherwise you will be asked for the passphrase everytime you interact with the remote repository). If you cannot prevent unauthorized access to your machine, enter a passphrase instead. Note that the passphrase is <em>not</em> identical to your Sourceforge account password! If you provided a passphrase, make sure to store in in a save place.
	</li>
<li>Upload the public key to your sourceforge account:
	<ol>
	<li>Navigate your web browser to your sourceforge account settings page.</li>
	<li>Click the <tt>SSH Settings</tt> tab.</li>
	<li>Select the preferred remote shell. <tt>/bin/bash</tt> is a good choice.</li>
	<li>Paste the content of the <tt>keyfile-name.pub</tt> into the textbox named <tt>SSH Public Keys</tt>. You can post multiple keys, one per line, if you like.</li>
	</ol></li>
<li>Create a project
	<ol>
	<li>Click on the burger menu in the upper right corner.</li>
	<li>Click on the "Me" entry.</li>
	<li>Click on the "Preferences" tab.</li>
	<li>Click on the "My profile and my projects" link.</li>
	<li>Click on the "Add Project" link in the "Projects" section.</li>
	<li>Enter the project name.</li>
	<li>Deselect the "Git" feature. We will create a new repository with a different folder name.</li>
	<li>Select the "Web Hosting" feature.</li>
	<li>Select or deselect additional project features (tools) for your project.</li>
	<li>Tick the "Terms of Use" checkbox.</li>
	<li>Click the "Create" button.</li>
	</ol></li>
<li>Create the remote project repository
	<ol>
	<li>Navigate a web browser to the project overview page ("https://sourceforge.net/projects/project-name/"). </li>
	<li>Click the <tt>Add new...</tt> button, then click <tt>Git</tt>.</li>
	<li>Type <tt>prj-code</tt> in the <tt>Label</tt> box.</li>
	<li>Type <tt>prj-code</tt> in the <tt>Url Path</tt> box.</li>
	<li>Click <tt>Save</tt>.</li>
	</ol></li>
<li>Create the local project repository.
	<ol>
	<li>Open a console window (cmd.exe, powershell, whatever).</li>
	<li>Create and initialize the project folder:
	<pre>mkdir &hellip;\project-name
	cd &hellip;\project-name
	mkdir prj-code
	cd prj-code
	git init</pre></li>
	<li>Add the remote origin url. Encode your username and Sourceforge account password in the url:
	<pre>git remote add origin https://username:password@git.code.sf.net/p/project-name/prj-code </pre>
	With the https protocol, username and password can be encoded in the URL.</li>
	<li>Add and/or edit files.</li>
	<li>Add the changes to the local repo:
	<pre>git add .</pre></li>
	<li>Commit the changes with a message:
	<pre>git commit -m "initial commit"</pre></li>
	<li>Push the local repository to the remote origin. The first push needs the --set-origin option:
	<pre>git push -u origin master</pre></li>
	<li>From now on, local changes can be pushed without the option:
	<pre>git push</pre></li>
	<li>Open a web browser and navigate to "https://sourceforge.net/p/project-name/code/ref/master/", or click the "Code" tab on the project settings page. Here you should find the pushed project files.</li>
	</ol></li>
<li>Create the remote repository for the project website as shown above. Use the name <tt>prj-web</tt> for label and url.</li>
<li>Create the local repository for the project website as shown above. Use the subfolder <tt>project-name/prj-web</tt>.</li>
<li>Add some files, notably <tt>index.htm</tt>.</li>
<li>Upload the project website via sFTP:
	<ol>
	<li>Navigate your local shell to the web source directory:
	<pre>cd /d d:\sourceforge\user-name\project-name\prj-web</pre></li>
	<li>Run sFTP and connect to the remote host:
	<pre>$ sftp user-name@web.sourceforge.net</pre>
	Enter your Sourceforge account password when asked to.</li>
	<li>Navigate the remote shell to the destination folder:
	<pre>sftp> cd /home/project-web/fooproject/htdocs</pre></li>
	<li>Upload the file(s):
	<pre>put index.html</pre></li>
	<li>When done, terminate sFTP:
	<pre>sftp> exit</pre></li>
	</ol></li>
</ol>

<p>test</p>

<!-- h2 --></div>

<h2 cbc>SSH</h2><div>

<ol class="collapsible instructions">
<li>Open a console window (cmd.exe).</li>
<li>Run the following command:
<pre><cc>D:\demo ></cc> ssh-keygen -t ed25519 -C "user-name@shell.sf.net"
<cc>Generating public/private rsa key pair.
Enter file in which to save the key (D:\demo/.ssh/id_rsa):
Enter passphrase (empty for no passphrase): </cc>********<cc>
Enter same passphrase again: </cc>********<cc>
Your identification has been saved in D:\demo/.ssh/id_ed25519
Your public key has been saved in D:\demo/.ssh/id_ed25519.pub
The key fingerprint is:
SHA256:a+e0uyPaivSNGqSKZGarb4MzmjMqIKBcr/gkmzV6FKc bassmati@shell.sf.net
The key's randomart image is:
+--[ED25519 256]--+
|                 |
|                 |
|                 |
|.  o .           |
|+ . *   S        |
|+. E .   .       |
|oB+++   o o      |
|&+@+.+ =.+..     |
|%%+oo.=oo.=+     |
+----[SHA256]-----+

D:\demo ></cc></pre></li>
</ol>

<p>If you entered a passphrase, this passphrase must be typed in to unlock the private key, which is a good thing for interactive communication, because it prevents the usage of a stolen private key. For automated tools, omit the passphrase. In this case, the private key will not be locked.</p>


<!-- h2 --></div>

</main><footer id="page-footer"></footer><script type="module" src="/inc/page.js" ></script></body></html>